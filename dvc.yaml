stages:
  data_ingestion:
    cmd: python src/data/data_ingestion.py
    deps:
      - src/data/data_ingestion.py
      - params.yaml
    params:
      - data_ingestion_params.test_size
      - data_ingestion_params.random_state
      - data_ingestion_params.shuffle
    outs:
      - data/interim/train
      - data/interim/test
      - data/raw

  data_preprocessing:
    cmd: python src/data/data_preprecessing.py
    deps:
      - src/data/data_preprecessing.py
      - params.yaml
      - data/interim/train
      - data/interim/test
    params:
      - data_preprocessing_params.text_column_for_preprocessing
    outs:
      - data/processed/preprocessed_training_data
      - data/processed/preprocessed_test_data

  feature_engineering:
    cmd: python src/features/feature_engineering.py
    deps:
      - src/features/feature_engineering.py
      - params.yaml
      - data/processed/preprocessed_training_data
      - data/processed/preprocessed_test_data
    params:
      - feature_engineering_params.text_column_for_engineering
      - TF-IDF_Params.max_df
      - TF-IDF_Params.min_df
      - TF-IDF_Params.max_features
      - TF-IDF_Params.ngram_range
    outs:
      - data/feature_engineered/feature_engineered_training_data
      - data/feature_engineered/feature_engineered_test_data
      - saved_models/vectorizer

  model_training:
    cmd: python src/model/train_model.py
    deps:
      - src/model/train_model.py
      - params.yaml
      - data/feature_engineered/feature_engineered_training_data
    params:
      - Target_Col
      - Model_Params.C
      - Model_Params.penalty
      - Model_Params.solver
      - Model_Params.max_iter
      - Model_Params.tol
      - Model_Params.random_state
    outs:
      - saved_models/model

  model_evaluation:
    cmd: python src/model/evaluate_model.py
    deps:
      - src/model/evaluate_model.py
      - params.yaml
      - data/feature_engineered/feature_engineered_test_data
    params:
      - Target_Col
    metrics:
      - reports/performance_metrics.json

  model_registry:
    cmd: python src/model/register_model.py
    deps:
      - src/model/register_model.py
      - params.yaml
      - saved_models/model
      - saved_models/vectorizer
      - reports/performance_metrics.json
    # no outs or metrics here, it only consumes the metric and pushes to MLflow
